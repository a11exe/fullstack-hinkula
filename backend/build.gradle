plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "3.1.1"
}

group = 'com.packt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation "io.jsonwebtoken:jjwt-api:$jjwt_version"
	implementation "io.jsonwebtoken:jjwt-impl:$jjwt_version"
	implementation "io.jsonwebtoken:jjwt-jackson:$jjwt_version"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
}

// Read more about how to configure the plugin from
// https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
// https://github.com/node-gradle/gradle-node-plugin/blob/master/docs/usage.md
node {
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
}

task deleteNpmInstallAndBuildFiles(type: Delete) {
	delete '../frontend/node_modules', '../frontend/build'
	followSymlinks = true
}

task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/../frontend/src")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/../frontend/src")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from '../frontend/build'
	into 'src/main/resources/static/.'
}

task buildFrontend(type: GradleBuild) {
	tasks = ['deleteNpmInstallAndBuildFiles', 'node', 'appNpmInstall', 'appNpmBuild', 'copyWebApp']
}

tasks.named('test') {
	useJUnitPlatform()
}
